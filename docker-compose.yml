version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_LISTENERS: LC://kafka:29092,LX://kafka:9092
      KAFKA_ADVERTISED_LISTENERS: LC://kafka:29092,LX://${DOCKER_HOST_IP:-localhost}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LC:PLAINTEXT,LX:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LC
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  postgres:
    build: ./backend/postgres
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      USE_DB_ID: "false"
      USE_JSON_PAYLOAD_AND_HEADERS: "false"
  cdc-service:
    image: eventuateio/eventuate-cdc-service:latest
    container_name: eventuate_cdc_service
    ports:
      - "8099:8080"
    depends_on:
      - postgres
      - kafka
    environment:
      EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181
      EVENTUATE_CDC_PIPELINE_PIPELINE1_TYPE: eventuate-tram
      EVENTUATE_CDC_PIPELINE_PIPELINE1_READER: reader1
      EVENTUATE_CDC_PIPELINE_PIPELINE1_EVENTUATEDATABASESCHEMA: tutormicrodb_schema

      EVENTUATE_CDC_PIPELINE_PIPELINE2_TYPE: eventuate-tram
      EVENTUATE_CDC_PIPELINE_PIPELINE2_READER: reader2
      EVENTUATE_CDC_PIPELINE_PIPELINE2_EVENTUATEDATABASESCHEMA: authdb_schema

      EVENTUATE_CDC_PIPELINE_PIPELINE3_TYPE: eventuate-tram
      EVENTUATE_CDC_PIPELINE_PIPELINE3_READER: reader3
      EVENTUATE_CDC_PIPELINE_PIPELINE3_EVENTUATEDATABASESCHEMA: tournamentdb_schema

      SPRING_PROFILES_ACTIVE: EventuatePolling
      EVENTUATE_CDC_READER_READER1_TYPE: polling
      EVENTUATE_CDC_READER_READER1_DATASOURCEURL: jdbc:postgresql://postgres/tutormicrodb
      EVENTUATE_CDC_READER_READER1_DATASOURCEUSERNAME: tutormicrodb_user
      EVENTUATE_CDC_READER_READER1_DATASOURCEPASSWORD: tutormicrodb_password
      EVENTUATE_CDC_READER_READER1_DATASOURCEDRIVERCLASSNAME: org.postgresql.Driver
      EVENTUATE_CDC_READER_READER1_LEADERSHIPLOCKPATH: /eventuate/cdc/leader/common1

      EVENTUATE_CDC_READER_READER2_TYPE: polling
      EVENTUATE_CDC_READER_READER2_DATASOURCEURL: jdbc:postgresql://postgres/authdb
      EVENTUATE_CDC_READER_READER2_DATASOURCEUSERNAME: authdb_user
      EVENTUATE_CDC_READER_READER2_DATASOURCEPASSWORD: authdb_password
      EVENTUATE_CDC_READER_READER2_DATASOURCEDRIVERCLASSNAME: org.postgresql.Driver
      EVENTUATE_CDC_READER_READER2_LEADERSHIPLOCKPATH: /eventuate/cdc/leader/common2

      EVENTUATE_CDC_READER_READER3_TYPE: polling
      EVENTUATE_CDC_READER_READER3_DATASOURCEURL: jdbc:postgresql://postgres/tournamentdb
      EVENTUATE_CDC_READER_READER3_DATASOURCEUSERNAME: tournamentdb_user
      EVENTUATE_CDC_READER_READER3_DATASOURCEPASSWORD: tournamentdb_password
      EVENTUATE_CDC_READER_READER3_DATASOURCEDRIVERCLASSNAME: org.postgresql.Driver
      EVENTUATE_CDC_READER_READER3_LEADERSHIPLOCKPATH: /eventuate/cdc/leader/common3
      JAVA_OPTS: -Xmx64m
  auth-service:
    build: ./backend/auth
    container_name: auth_service
    ports:
      - "8082:8080"
    depends_on:
      - postgres
      - kafka
      - cdc-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres/authdb
      SPRING_DATASOURCE_USERNAME: authdb_user
      SPRING_DATASOURCE_PASSWORD: authdb_password
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181
      EVENTUATE_DATABASE_SCHEMA: authdb_schema
  tournament-service:
    build: ./backend/tournament
    container_name: tournament_service
    ports:
      - "8083:8080"
    depends_on:
      - postgres
      - kafka
      - cdc-service
      - auth-service
      - tutor-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres/tournamentdb
      SPRING_DATASOURCE_USERNAME: tournamentdb_user
      SPRING_DATASOURCE_PASSWORD: tournamentdb_password
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181
      EVENTUATE_DATABASE_SCHEMA: tournamentdb_schema
  tutor-service:
    build: ./backend/tutor
    container_name: tutor_service
    ports:
      - "8084:8080"
    depends_on:
      - postgres
      - kafka
      - cdc-service
      - auth-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres/tutormicrodb
      SPRING_DATASOURCE_USERNAME: tutormicrodb_user
      SPRING_DATASOURCE_PASSWORD: tutormicrodb_password
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181
      EVENTUATE_DATABASE_SCHEMA: tutormicrodb_schema
  api-gateway:
    build: ./backend/apigateway
    container_name: api_gateway
    ports:
      - "8080:8080"
  frontend:
    build:
      context:  ./frontend/
      dockerfile: Dockerfile
      args:
        NODE_ENV: dev
    image: tutor-frontend                                                     
    container_name: frontend
    depends_on:
      - api-gateway
    links:
      - api-gateway
    ports:
      - 8081:80
    restart: unless-stopped
    volumes:
      - ./data/localhost-nginx.conf:/etc/nginx/nginx.conf
      - ./data/error.log:/var/log/nginx/error.log
      - ./data/access.log:/var/log/nginx/access.log